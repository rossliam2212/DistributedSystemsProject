package server;

import java.sql.*;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public enum CarDao {
	instance;
	
	private static final String JDBC_DRIVER = "org.hsqldb.jdbcDriver";
    private static final String DATABASE_URL = "jdbc:hsqldb:hsql://localhost/oneDB;ifexists=true"; 
    private static final String DATABASE_USER = "SA"; 
    private static final String DATABASE_PASSWORD = "Passw0rd";
	
//	private Map<Integer, Car> carsMap = new HashMap<>();
//	
//	private CarDao() {
//		Car car = new Car();
//		car.setId(1);
//		car.setMake("Nissan");
//		car.setModel("GTR Skyline R32");
//		car.setYear(1990);
//		car.setTransmission("Manual");
//		car.setHorsePower(312);
//		
//		carsMap.put(1, car);
//		
//		Car car2 = new Car();
//		car2.setId(2);
//		car2.setMake("Porche");
//		car2.setModel("911 993 GT2");
//		car2.setYear(1995);
//		car2.setTransmission("Manual");
//		car2.setHorsePower(424);
//		
//		carsMap.put(2, car2);
//	}
//	
//	public List<Car> getCars() {
//		List<Car> cars = new ArrayList<>();
//		cars.addAll(carsMap.values());
//		return cars;
//	}
//	
//	public Car getCarByID(int id) {
//		return carsMap.get(id);
//	}
	
	public List<Car> getCars() {
		Connection connection = null;
		Statement statement = null;
		ResultSet resultSet = null;
		List<Car> cars = new ArrayList<>();
		
		try {
			Class.forName(JDBC_DRIVER);
			connection = DriverManager.getConnection(DATABASE_URL, DATABASE_USER, DATABASE_PASSWORD);
			statement = connection.createStatement();
		} catch (final Exception e) {
			e.printStackTrace();
		}
		
		return Collections.emptyList();
		
//		Connection connection = null;
//		Statement statement = null;
//		ResultSet resultSet = null;
//		List<Car> cars = new ArrayList<>();
//		
//		try {
//			Class.forName(JDBC_DRIVER);
//			connection = DriverManager.getConnection(DATABASE_URL, DATABASE_USER, DATABASE_PASSWORD);
//			statement = connection.createStatement();
//			String sql = "SELECT c.id, m.manufacturer, c.model, c.year, c.transmission, c.horsepower FROM cars c JOIN manufacturers m ON c.manufacturer_id = m.id;";
//			resultSet = statement.executeQuery(sql);
//			
//			while (resultSet.next()) {
//				int id = resultSet.getInt("id");
//				String make = resultSet.getString("manufacturer");
//				String model = resultSet.getString("model");
//				int year = resultSet.getInt("year");
//				String transmission = resultSet.getString("transmission");
//				int horsePower = resultSet.getInt("horsepower");
//				
//				var c = new Car(id, make, model, year, transmission, horsePower);
//				cars.add(c);
//			}
//		} catch (final Exception e) {
//			System.err.println("[Error] Failed to retrieve cars :: " + e.getMessage());
//		} finally {
//			if (resultSet != null) {
//				try {
//					resultSet.close();
//		        } catch (SQLException e) {
//		            System.err.println("[Error] Failed to close ResultSet :: " + e.getMessage());
//		        }
//	        }
//			if (statement != null) {
//				try {
//					statement.close();
//				} catch (SQLException e) {
//					System.err.println("[Error] Failed to close Statement :: " + e.getMessage());
//		        }
//			}
//			if (connection != null) {
//				try {
//					connection.close();
//				} catch (SQLException e) {
//					System.err.println("[Error] Failed to close Connection :: " + e.getMessage());
//	        }
//	      }
//		}
//		return cars;
	}
}
